{
  "name": "meal-planner-app",
  "version": "1.0.0",
  "description": "A collaborative meal planning application with AI-powered suggestions and grocery integration",
  "private": true,
  "workspaces": [
    "frontend",
    "backend"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "cd frontend && npm start",
    "dev:backend": "cd backend && npm run dev",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test -- --watchAll=false",
    "test:backend": "cd backend && npm test",
    "test:watch": "concurrently \"npm run test:frontend:watch\" \"npm run test:backend:watch\"",
    "test:frontend:watch": "cd frontend && npm test",
    "test:backend:watch": "cd backend && npm run test:watch",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:fix": "npm run lint:frontend:fix && npm run lint:backend:fix",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "lint:backend:fix": "cd backend && npm run lint:fix",
    "type-check": "npm run type-check:frontend && npm run type-check:backend",
    "type-check:frontend": "cd frontend && npm run type-check",
    "type-check:backend": "cd backend && npm run type-check",
    "setup": "./scripts/setup/install-dependencies.sh",
    "setup:env": "./scripts/setup/configure-environment.sh",
    "db:migrate": "supabase db push",
    "db:reset": "supabase db reset",
    "db:seed": "supabase db seed",
    "db:backup": "./scripts/maintenance/backup-database.sh",
    "generate:types": "./scripts/development/generate-types.sh",
    "clean": "npm run clean:frontend && npm run clean:backend",
    "clean:frontend": "cd frontend && rm -rf build node_modules",
    "clean:backend": "cd backend && rm -rf dist node_modules",
    "install:all": "npm install && cd frontend && npm install && cd ../backend && npm install",
    "update:deps": "./scripts/maintenance/update-dependencies.sh",
    "security:audit": "npm audit && cd frontend && npm audit && cd ../backend && npm audit",
    "security:fix": "npm audit fix && cd frontend && npm audit fix && cd ../backend && npm audit fix",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up",
    "docker:down": "docker-compose down",
    "deploy:staging": "./scripts/deployment/deploy-staging.sh",
    "deploy:production": "./scripts/deployment/deploy-production.sh",
    "health:check": "./scripts/deployment/health-check.sh",
    "logs:frontend": "cd frontend && npm run logs",
    "logs:backend": "cd backend && npm run logs",
    "coverage": "npm run test:frontend -- --coverage && npm run test:backend -- --coverage",
    "coverage:report": "./scripts/testing/generate-coverage.sh",
    "precommit": "npm run lint && npm run type-check && npm run test",
    "prepare": "husky install"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/meal-planner-app.git"
  },
  "keywords": [
    "meal-planning",
    "recipes",
    "ai",
    "grocery-list",
    "collaboration",
    "react",
    "nodejs",
    "supabase",
    "openai"
  ],
  "author": "Your Name <your.email@example.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/your-username/meal-planner-app/issues"
  },
  "homepage": "https://github.com/your-username/meal-planner-app#readme",
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run type-check && npm run test"
    }
  }
}
